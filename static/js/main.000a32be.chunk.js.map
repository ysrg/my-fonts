{"version":3,"sources":["utils/constants.js","utils/context.js","utils/fetch.js","components/Store/Card.js","components/Store/SqWrapper.js","components/Store/SqInner.js","components/Store/index.js","components/Checkout/index.js","components/Header/Wrapper.js","components/Header/PromptText.js","components/Header/Menu.js","components/Header/MenuItem.js","components/Header/index.js","components/HomeContainer/Wrapper.js","components/HomeContainer/Main.js","components/HomeContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["constants","Context","React","createContext","Provider","children","value","card","setCard","rCard","this","localStorage","setItem","JSON","stringify","useFetch","url","cache","useRef","initialState","status","error","data","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","a","current","fetch","response","json","message","fetchData","Card","styled","div","selected","isMain","SqWrapper","SqInner","memo","handleCardClick","content","map","item","index","isCardSelected","abbr","parse","getItem","onClick","key","id","className","style","background","color","aria-label","window","ntc","name","aria-required","label","Wrapper","Checkout","PromptText","h1","Menu","MenuItem","active","Root","Header","history","useHistory","useState","routes","setRoutes","tab","showActive","location","pathname","content_endpoint","ep","to","toUpperCase","Main","main","HomeContainer","context","useContext","route","setRoute","setSelected","config","createBrowserHistory","App","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.000a32be.chunk.js","sourcesContent":["export const constants = {\n  TABS_URL: \"http://json.ffwagency.md/tabs\",\n  FONTS_URL: \"http://json.ffwagency.md/fonts_a\",\n  BUY_URL: \"http://json.ffwagency.md/fonts_b\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Context = React.createContext();\n\nProvider.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport function Provider({ children }) {\n  return (\n    <Context.Provider\n      value={{\n        card: {},\n        setCard(rCard) {\n          this.card = rCard;\n          localStorage.setItem(\"selectedCard\", JSON.stringify(rCard));\n        },\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n","/**\n * Memoization hook for state persistance\n */\n\nimport { useEffect, useRef, useReducer } from \"react\";\n\nexport const useFetch = (url) => {\n  const cache = useRef({});\n  const initialState = {\n    status: \"idle\",\n    error: null,\n    data: [],\n  };\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"FETCHING\":\n        return { ...initialState, status: \"fetching\" };\n      case \"FETCHED\":\n        return { ...initialState, status: \"fetched\", data: action.payload };\n      case \"FETCH_ERROR\":\n        return { ...initialState, status: \"error\", error: action.payload };\n      default:\n        return state;\n    }\n  }, initialState);\n\n  useEffect(() => {\n    let cancelRequest = false;\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCHING\" });\n      if (cache.current[url]) {\n        const data = cache.current[url];\n        dispatch({ type: \"FETCHED\", payload: data });\n      } else {\n        try {\n          const response = await fetch(url);\n          const data = await response.json();\n          cache.current[url] = data;\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCHED\", payload: data });\n        } catch (error) {\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCH_ERROR\", payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return function cleanup() {\n      cancelRequest = true;\n    };\n  }, [url]);\n\n  return state;\n};\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  height: 40%;\n  width: 55%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  min-height: 50%;\n  border-radius: 15px;\n  &:hover {\n    background: #cecece1a;\n    cursor: pointer;\n  }\n  & > ul {\n    width: 50%;\n  }\n  ${({ selected }) =>\n    selected &&\n    `\n    opacity: 50%;\n  `}\n  ${({ isMain }) =>\n    isMain &&\n    `\n    height: 40%;\n    flex-direction: column;\n    flex-basis: 100%;\n    width: 45%;\n    padding-top: 1em;\n  `}\n\n@media (max-width: 768px) {\n    height: 100%;\n    width: 100%;\n    margin: 16px 0;\n    & > ul {\n      width: 60%;\n    }\n  }\n`;\n\nexport default Card;\n","import styled from \"styled-components\";\n\nconst SqWrapper = styled.div`\n  border: 2px solid #676363;\n  border-radius: 14px;\n`;\n\nexport default SqWrapper;\n","import styled from \"styled-components\";\n\nconst SqInner = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 15px;\n  border: 5px solid white;\n  display: flex;\n  align-items: flex-end;\n  padding: 5px;\n  ${({ isMain }) => {\n    return (\n      isMain &&\n      `\n    width: 160px;\n    height: 160px;\n  `\n    );\n  }}\n`;\n\nexport default SqInner;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"./Card\";\nimport SqWrapper from \"./SqWrapper\";\nimport SqInner from \"./SqInner\";\n\nconst Store = ({ value: { data, selected, handleCardClick, status } }) => {\n  return (\n    <>\n      {status === \"fetched\" &&\n        data.content.map((item, index) => {\n          const isCardSelected =\n            selected[item.abbr] ||\n            JSON.parse(localStorage.getItem(\"selectedCard\"))[item.abbr];\n          return (\n            <Card\n              onClick={() => handleCardClick(item.abbr, index)}\n              selected={isCardSelected}\n              isMain={index === 0}\n              key={item.id}\n            >\n              <SqWrapper>\n                <SqInner\n                  className=\"App--square\"\n                  style={{ background: `${item.color}` }}\n                  aria-label={window.ntc.name(item.color)}\n                  aria-required=\"true\"\n                  isMain={index === 0}\n                >\n                  {item.abbr}\n                </SqInner>\n              </SqWrapper>\n              <ul>\n                <li>{item.label}</li>\n              </ul>\n            </Card>\n          );\n        })}\n    </>\n  );\n};\n\nStore.propTypes = {\n  value: PropTypes.object.isRequired,\n};\n\nexport default React.memo(Store);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useFetch, constants } from \"../../utils\";\n\nconst Wrapper = styled.div`\n  width: 70%;\n`;\nconst Checkout = () => {\n  const { data } = useFetch(constants.BUY_URL);\n  return <Wrapper>{data.content}</Wrapper>;\n};\n\nexport default Checkout;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: row wrap-reverse;\n  height: max-content;\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst PromptText = styled.h1`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  font-size: 22px;\n  margin: 12px;\n`;\n\nexport default PromptText;\n","import styled from \"styled-components\";\n\nconst Menu = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default Menu;\n","import styled from \"styled-components\";\n\nconst MenuItem = styled.div`\n  font-size: 12px;\n  margin: 12px;\n  line-height: 22px;\n  display: inline-block;\n  font-weight: 700;\n  border-radius: 3rem;\n  white-space: nowrap;\n  background-color: transparent;\n  border: 0;\n  padding: 0.3em 0.8em;\n  &:hover {\n    color: #0496d8;\n    background: #c1c1c11a;\n    cursor: pointer;\n  }\n  ${({ active }) =>\n    active &&\n    `\n    opacity: 50%;\n  `}\n`;\n\nexport default MenuItem;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useFetch, constants } from \"../../utils\";\nimport Wrapper from \"./Wrapper\";\nimport PromptText from \"./PromptText\";\nimport Menu from \"./Menu\";\nimport MenuItem from \"./MenuItem\";\n\nconst Root = styled.div`\n  width: 100%;\n`;\n\nconst Header = () => {\n  const history = useHistory();\n  const [routes, setRoutes] = useState({});\n  const { data } = useFetch(constants.TABS_URL);\n\n  const handleItemClick = (selected, ep) => {\n    setRoutes({ [ep]: true });\n  };\n\n  return (\n    <Root>\n      <Wrapper>\n        <PromptText>Please select one font</PromptText>\n        <Menu>\n          {data.map((tab, index) => {\n            if (tab.label) {\n              const showActive =\n                history.location.pathname === `/${tab.content_endpoint}`;\n              return (\n                <MenuItem\n                  active={`${\n                    routes[tab.content_endpoint] === true || showActive\n                      ? true\n                      : \"\"\n                  }`}\n                  key={tab.id}\n                >\n                  <Link\n                    onClick={() => handleItemClick(index, tab.content_endpoint)}\n                    to={`/${tab.content_endpoint}`}\n                  >\n                    {tab.label.toUpperCase()}\n                  </Link>\n                </MenuItem>\n              );\n            }\n          })}\n        </Menu>\n      </Wrapper>\n    </Root>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 50%;\n  margin: auto;\n  height: 450px;\n  font-family: \"Montserrat\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  & a {\n    text-decoration: none;\n  }\n  @media (max-width: 768px) {\n    height: max-content;\n    /* flex-flow: row wrap; */\n  }\n`;\n\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nconst Main = styled.main`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  border-radius: 15px;\n  height: 80%;\n  border: 3px solid rgb(218 218 218);\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nexport default Main;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFetch, Context, constants } from \"../../utils\";\nimport Store from \"../Store\";\nimport Checkout from \"../Checkout\";\nimport Header from \"../Header\";\nimport Wrapper from \"./Wrapper\";\nimport Main from \"./Main\";\n\nconst HomeContainer = ({ history }) => {\n  const context = useContext(Context);\n  const [route, setRoute] = useState(\"/\");\n  const [selected, setSelected] = useState({});\n\n  useEffect(() => setRoute(history.location.pathname), [\n    history.location.pathname,\n  ]);\n\n  const handleCardClick = (abbr, index) => {\n    const config = { [abbr]: !selected[abbr] };\n    setSelected(config);\n    context.setCard(config);\n  };\n\n  const { status, data } = useFetch(constants.FONTS_URL);\n\n  return (\n    <Wrapper>\n      <Header />\n      <Main>\n        {route === \"/fonts_b\" ? (\n          <Checkout />\n        ) : (\n          <Store value={{ data, selected, handleCardClick, status }} />\n        )}\n      </Main>\n    </Wrapper>\n  );\n};\n\nHomeContainer.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default HomeContainer;\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"./utils\";\nimport { HomeContainer } from \"./components\";\n\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Provider>\n        <Switch>\n          <Route path=\"/\" component={HomeContainer} />\n        </Switch>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}